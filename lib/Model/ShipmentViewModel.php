<?php
/**
 * ShipmentViewModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * ShipmentViewModel Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ShipmentViewModel implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'order_reference' => 'string',
        'merchant_reference' => 'string',
        'track_trace_no' => 'string',
        'track_trace_url' => 'string',
        'method' => 'string',
        'shipment_method' => '\Swagger\Client\Model\ShipmentMethod',
        'shipment_method_id' => 'int',
        'lines' => '\Swagger\Client\Model\ShipmentLineViewModel[]'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'order_reference' => 'OrderReference',
        'merchant_reference' => 'MerchantReference',
        'track_trace_no' => 'TrackTraceNo',
        'track_trace_url' => 'TrackTraceUrl',
        'method' => 'Method',
        'shipment_method' => 'ShipmentMethod',
        'shipment_method_id' => 'ShipmentMethodId',
        'lines' => 'Lines'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'order_reference' => 'setOrderReference',
        'merchant_reference' => 'setMerchantReference',
        'track_trace_no' => 'setTrackTraceNo',
        'track_trace_url' => 'setTrackTraceUrl',
        'method' => 'setMethod',
        'shipment_method' => 'setShipmentMethod',
        'shipment_method_id' => 'setShipmentMethodId',
        'lines' => 'setLines'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'order_reference' => 'getOrderReference',
        'merchant_reference' => 'getMerchantReference',
        'track_trace_no' => 'getTrackTraceNo',
        'track_trace_url' => 'getTrackTraceUrl',
        'method' => 'getMethod',
        'shipment_method' => 'getShipmentMethod',
        'shipment_method_id' => 'getShipmentMethodId',
        'lines' => 'getLines'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $order_reference 
      * @var string
      */
    protected $order_reference;
    
    /**
      * $merchant_reference 
      * @var string
      */
    protected $merchant_reference;
    
    /**
      * $track_trace_no 
      * @var string
      */
    protected $track_trace_no;
    
    /**
      * $track_trace_url 
      * @var string
      */
    protected $track_trace_url;
    
    /**
      * $method 
      * @var string
      */
    protected $method;
    
    /**
      * $shipment_method 
      * @var \Swagger\Client\Model\ShipmentMethod
      */
    protected $shipment_method;
    
    /**
      * $shipment_method_id 
      * @var int
      */
    protected $shipment_method_id;
    
    /**
      * $lines 
      * @var \Swagger\Client\Model\ShipmentLineViewModel[]
      */
    protected $lines;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->order_reference = $data["order_reference"];
            $this->merchant_reference = $data["merchant_reference"];
            $this->track_trace_no = $data["track_trace_no"];
            $this->track_trace_url = $data["track_trace_url"];
            $this->method = $data["method"];
            $this->shipment_method = $data["shipment_method"];
            $this->shipment_method_id = $data["shipment_method_id"];
            $this->lines = $data["lines"];
        }
    }
    
    /**
     * Gets order_reference
     * @return string
     */
    public function getOrderReference()
    {
        return $this->order_reference;
    }
  
    /**
     * Sets order_reference
     * @param string $order_reference 
     * @return $this
     */
    public function setOrderReference($order_reference)
    {
        
        $this->order_reference = $order_reference;
        return $this;
    }
    
    /**
     * Gets merchant_reference
     * @return string
     */
    public function getMerchantReference()
    {
        return $this->merchant_reference;
    }
  
    /**
     * Sets merchant_reference
     * @param string $merchant_reference 
     * @return $this
     */
    public function setMerchantReference($merchant_reference)
    {
        
        $this->merchant_reference = $merchant_reference;
        return $this;
    }
    
    /**
     * Gets track_trace_no
     * @return string
     */
    public function getTrackTraceNo()
    {
        return $this->track_trace_no;
    }
  
    /**
     * Sets track_trace_no
     * @param string $track_trace_no 
     * @return $this
     */
    public function setTrackTraceNo($track_trace_no)
    {
        
        $this->track_trace_no = $track_trace_no;
        return $this;
    }
    
    /**
     * Gets track_trace_url
     * @return string
     */
    public function getTrackTraceUrl()
    {
        return $this->track_trace_url;
    }
  
    /**
     * Sets track_trace_url
     * @param string $track_trace_url 
     * @return $this
     */
    public function setTrackTraceUrl($track_trace_url)
    {
        
        $this->track_trace_url = $track_trace_url;
        return $this;
    }
    
    /**
     * Gets method
     * @return string
     */
    public function getMethod()
    {
        return $this->method;
    }
  
    /**
     * Sets method
     * @param string $method 
     * @return $this
     */
    public function setMethod($method)
    {
        
        $this->method = $method;
        return $this;
    }
    
    /**
     * Gets shipment_method
     * @return \Swagger\Client\Model\ShipmentMethod
     */
    public function getShipmentMethod()
    {
        return $this->shipment_method;
    }
  
    /**
     * Sets shipment_method
     * @param \Swagger\Client\Model\ShipmentMethod $shipment_method 
     * @return $this
     */
    public function setShipmentMethod($shipment_method)
    {
        
        $this->shipment_method = $shipment_method;
        return $this;
    }
    
    /**
     * Gets shipment_method_id
     * @return int
     */
    public function getShipmentMethodId()
    {
        return $this->shipment_method_id;
    }
  
    /**
     * Sets shipment_method_id
     * @param int $shipment_method_id 
     * @return $this
     */
    public function setShipmentMethodId($shipment_method_id)
    {
        
        $this->shipment_method_id = $shipment_method_id;
        return $this;
    }
    
    /**
     * Gets lines
     * @return \Swagger\Client\Model\ShipmentLineViewModel[]
     */
    public function getLines()
    {
        return $this->lines;
    }
  
    /**
     * Sets lines
     * @param \Swagger\Client\Model\ShipmentLineViewModel[] $lines 
     * @return $this
     */
    public function setLines($lines)
    {
        
        $this->lines = $lines;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
